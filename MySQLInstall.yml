---
- name: Install and Configure MySQL 8.4 on RHEL 9 and Migrate from Solaris 11 MySQL 5.7
  hosts: n4
  become: yes
  tasks:
    # Install MySQL 8 repository on RHEL 9
    - name: Install MySQL 8.4 repository
      ansible.builtin.yum:
        name: /etc/yum.repos.d/mysql84-community-release-el9-1.noarch.rpm
        state: present

    # Install MySQL 8.4
    - name: Install MySQL 8.4
      yum:
        name: mysql-community-server
        state: present

    # Start MySQL service on RHEL 9
    - name: Start MySQL service
      service:
        name: mysqld
        state: started
        enabled: yes

    # Get MySQL root password from the MySQL log
    - name: Get MySQL temporary root password
      shell: grep 'temporary password' /var/log/mysqld.log | awk '{print $NF}'
      register: mysql_root_password
      changed_when: false

    # Set the root password to Matilda@123
    - name: Set MySQL root password on RHEL 9
      community.mysql.mysql_user:
        name: root
        password: Matilda@123
        login_user: root
        login_password: "{{ mysql_root_password.stdout }}"
        host: localhost
        state: present
      ignore_errors: yes

    # Disable MySQL password validation
    - name: Disable password validation
      community.mysql.mysql_query:
        login_user: root
        login_password: Matilda@123
        query: "SET GLOBAL validate_password_policy = LOW;"
      ignore_errors: yes

    # Create databases as per the Solaris MySQL 5.7 configuration
    - name: Create MySQL databases (from Solaris 5.7 configuration)
      community.mysql.mysql_db:
        name: "{{ item }}"
        state: present
        login_user: root
        login_password: Matilda@123
      loop:
        - database1
        - database2
        - database3

    # Create MySQL users as per the Solaris MySQL 5.7 configuration
    - name: Create MySQL users (from Solaris 5.7 configuration)
      community.mysql.mysql_user:
        name: "{{ item.name }}"
        password: "{{ item.password }}"
        priv: "{{ item.privileges }}"
        state: present
        login_user: root
        login_password: Matilda@123
      loop:
        - { name: "user1", password: "password1", privileges: "ALL PRIVILEGES ON database1.*" }
        - { name: "user2", password: "password2", privileges: "ALL PRIVILEGES ON database2.*" }

- name: Secure MySQL installation manually
  hosts: all
  become: yes
  tasks:
    - name: Remove anonymous users
      community.mysql.mysql_user:
        name: ""
        host_all: yes
        state: absent
        login_user: root
        login_password: Matilda@123

    - name: Disallow root login remotely
      community.mysql.mysql_query:
        query: "DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1');"
        login_user: root
        login_password: Matilda@123

    - name: Remove test database
      community.mysql.mysql_db:
        name: test
        state: absent
        login_user: root
        login_password: Matilda@123

    - name: Flush privileges
      community.mysql.mysql_query:
        query: "FLUSH PRIVILEGES;"
        login_user: root
        login_password: Matilda@123
